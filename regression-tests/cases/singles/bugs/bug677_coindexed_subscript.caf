!
! This results in a compiler crash and/or assertion failure during
! Coarray Prelowering phase. It involves assignment statements where a
! coindexed term with a coindexed subscript is on the LHS or RHS, and
! the other side has a term of same array shape (or both are scalars).
!

      program bug677
          integer i,j,k
          integer r(5)[*], q(5,5)[*], p(5,5,5)[*], a[*]
          integer :: buf(5)
          logical :: success

          a = this_image()
          q = this_image()
          p = this_image()
          i = 5
          j = 5
          success = .true.

          r(:) = [(10*this_image() + i, i=1,5)]

          sync all

          if (this_image() == 2) then
              r(1) = r(a[3])[1]  ! should get value 13
              if (r(1) /= 13) then
                  print *, this_image(), ": wrong value for r(1): ",    &
                          r(1)
                  success = .false.
              end if
              r(a[3])[1] = r(1)+1000
          end if

          sync all

          if (this_image() == 1) then
              if (r(3) /= 1013) then
                  print *, this_image(), ": wrong value for r(3): ",    &
                          r(1)
                  success = .false.
              end if
          end if

          sync all
              if (this_image() == 4) then
                  q(1:i, a[3])[1] = q(1:i,1)
              end if
          sync all
              if (this_image() == 1) then
                  if (any(q(1:i,3) /= 4)) then
                      print *, this_image(), &
                      ": wrong values for q(1:i,3): ", &
                          q(1:i,3)
                  end if
              end if
          sync all
              if (this_image() == 3) then
                  q(1:i,1) =  q(1:i, a[3])[1]
                  if (any(q(1:i,1) /= 4)) then
                      print *, this_image(), &
                      ": wrong values for q(1:i,1): ", &
                          q(1:i,1)
                      success = .false.
                  end if
              end if
          sync all

              if (this_image() == 2) then
                  p(1:i, 1:j, a[4])[1] = p(1:i,1:j,1)
              end if
          sync all
              if (this_image() == 1) then
                  if (any(p(1:i,1:j,4) /= 2)) then
                      print *, this_image(), &
                      ": wrong values for p(1:i,1:j,4): ", &
                          p(1:i,1:j,4)
                      success = .false.
                  end if
              end if

          sync all

              if (this_image() == 4) then
                  p(1:i,1:j,1) = p(1:i, 1:j, a[4])[1]
                  if (any(p(1:i,1:j,1) /= 2)) then
                      print *, this_image(), &
                      ": wrong values for p(1:i,1:j,1): ", &
                          p(1:i,1:j,1)
                      success = .false.
                  end if
              end if

          sync all

          if (success) then
              print *, this_image(), " : SUCCESS"
          else
              print *, this_image(), " : FAIL"
          end if

      end program
