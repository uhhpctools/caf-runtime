program main
    implicit none

    type T3
        integer :: d
    end type

    type T2
        type(T3) :: c(2)
    end type

    type T1
        type(T2),allocatable :: b(:)[:,:]
    end type

    type(T1) :: a(2)
    integer :: ti, ni

    ti = this_image()
    ni = num_images()

    allocate( a(2)%b(5)[2,*] )

    if (ti == 2) then

    ! TESTING THIS_IMAGE(coarray)

    print *, ti, this_image(a(2)%b(2))
    print *, ti, this_image(a(2)%b(:))
    print *, ti, this_image(a(2)%b(1:3))
    print *, ti, this_image(a(2)%b(2)%c)
    print *, ti, this_image(a(2)%b(2)%c%d)
    print *, ti, this_image(a(2)%b(2)%c(2))
    print *, ti, this_image(a(2)%b(2)%c(2)%d)
    print *, ti, this_image(a(2)%b(2)%c(1:2))
    print *, ti, this_image(a(2)%b(2)%c(1:2)%d)


    ! TESTING IMAGE_INDEX(coarray)

    print *, ti, image_index(a(2)%b(2), [1,2])
    print *, ti, image_index(a(2)%b(:), [1,2])
    print *, ti, image_index(a(2)%b(1:3), [1,2])
    print *, ti, image_index(a(2)%b(2)%c, [1,2])
    print *, ti, image_index(a(2)%b(2)%c%d, [1,2])
    print *, ti, image_index(a(2)%b(2)%c(2), [1,2])
    print *, ti, image_index(a(2)%b(2)%c(2)%d, [1,2])
    print *, ti, image_index(a(2)%b(2)%c(1:2), [1,2])
    print *, ti, image_index(a(2)%b(2)%c(1:2)%d, [1,2])

    ! TESTING LCOBOUND(coarray)

    print *, ti, lcobound(a(2)%b(2))
    print *, ti, lcobound(a(2)%b(:))
    print *, ti, lcobound(a(2)%b(1:3))
    print *, ti, lcobound(a(2)%b(2)%c)
    print *, ti, lcobound(a(2)%b(2)%c%d)
    print *, ti, lcobound(a(2)%b(2)%c(2))
    print *, ti, lcobound(a(2)%b(2)%c(2)%d)
    print *, ti, lcobound(a(2)%b(2)%c(1:2))
    print *, ti, lcobound(a(2)%b(2)%c(1:2)%d)

    print *, ti, lcobound(a(2)%b(2),2)
    print *, ti, lcobound(a(2)%b(:),2)
    print *, ti, lcobound(a(2)%b(1:3),2)
    print *, ti, lcobound(a(2)%b(2)%c,2)
    print *, ti, lcobound(a(2)%b(2)%c%d,2)
    print *, ti, lcobound(a(2)%b(2)%c(2),2)
    print *, ti, lcobound(a(2)%b(2)%c(2)%d,2)
    print *, ti, lcobound(a(2)%b(2)%c(1:2),2)
    print *, ti, lcobound(a(2)%b(2)%c(1:2)%d,2)


    ! TESTING UCOBOUND(coarray)

    print *, ti, ucobound(a(2)%b(2))
    print *, ti, ucobound(a(2)%b(:))
    print *, ti, ucobound(a(2)%b(1:3))
    print *, ti, ucobound(a(2)%b(2)%c)
    print *, ti, ucobound(a(2)%b(2)%c%d)
    print *, ti, ucobound(a(2)%b(2)%c(2))
    print *, ti, ucobound(a(2)%b(2)%c(2)%d)
    print *, ti, ucobound(a(2)%b(2)%c(1:2))
    print *, ti, ucobound(a(2)%b(2)%c(1:2)%d)

    print *, ti, ucobound(a(2)%b(2),2)
    print *, ti, ucobound(a(2)%b(:),2)
    print *, ti, ucobound(a(2)%b(1:3),2)
    print *, ti, ucobound(a(2)%b(2)%c,2)
    print *, ti, ucobound(a(2)%b(2)%c%d,2)
    print *, ti, ucobound(a(2)%b(2)%c(2),2)
    print *, ti, ucobound(a(2)%b(2)%c(2)%d,2)
    print *, ti, ucobound(a(2)%b(2)%c(1:2),2)
    print *, ti, ucobound(a(2)%b(2)%c(1:2)%d,2)

    end if

    sync all

end program
